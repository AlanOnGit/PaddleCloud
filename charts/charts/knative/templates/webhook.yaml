apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: config.webhook.serving.knative.dev
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.2.0"
    serving.knative.dev/release: "v1.2.0"
webhooks:
  - admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: webhook
        namespace: knative-serving
    failurePolicy: Fail
    sideEffects: None
    name: config.webhook.serving.knative.dev
    namespaceSelector:
      matchExpressions:
        - key: serving.knative.dev/release
          operator: Exists
    timeoutSeconds: 10

---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook.serving.knative.dev
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.2.0"
    serving.knative.dev/release: "v1.2.0"
webhooks:
  - admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: webhook
        namespace: knative-serving
    failurePolicy: Fail
    sideEffects: None
    name: webhook.serving.knative.dev
    timeoutSeconds: 10
    rules:
      - apiGroups:
          - autoscaling.internal.knative.dev
          - networking.internal.knative.dev
          - serving.knative.dev
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        scope: "*"
        resources:
          - metrics
          - podautoscalers
          - certificates
          - ingresses
          - serverlessservices
          - configurations
          - revisions
          - routes
          - services

---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook.domainmapping.serving.knative.dev
  labels:
    app.kubernetes.io/component: domain-mapping
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.2.0"
    serving.knative.dev/release: "v1.2.0"
webhooks:
  - admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: domainmapping-webhook
        namespace: knative-serving
    failurePolicy: Fail
    sideEffects: None
    name: webhook.domainmapping.serving.knative.dev
    timeoutSeconds: 10
    rules:
      - apiGroups:
          - serving.knative.dev
        apiVersions:
          - v1alpha1
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        scope: "*"
        resources:
          - domainmappings

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.domainmapping.serving.knative.dev
  labels:
    app.kubernetes.io/component: domain-mapping
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.2.0"
    serving.knative.dev/release: "v1.2.0"
webhooks:
  - admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: domainmapping-webhook
        namespace: knative-serving
    failurePolicy: Fail
    sideEffects: None
    name: validation.webhook.domainmapping.serving.knative.dev
    timeoutSeconds: 10
    rules:
      - apiGroups:
          - serving.knative.dev
        apiVersions:
          - v1alpha1
          - v1beta1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        scope: "*"
        resources:
          - domainmappings

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.serving.knative.dev
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "1.2.0"
    serving.knative.dev/release: "v1.2.0"
webhooks:
  - admissionReviewVersions: ["v1", "v1beta1"]
    clientConfig:
      service:
        name: webhook
        namespace: knative-serving
    failurePolicy: Fail
    sideEffects: None
    name: validation.webhook.serving.knative.dev
    timeoutSeconds: 10
    rules:
      - apiGroups:
          - autoscaling.internal.knative.dev
          - networking.internal.knative.dev
          - serving.knative.dev
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
          - DELETE
        scope: "*"
        resources:
          - metrics
          - podautoscalers
          - certificates
          - ingresses
          - serverlessservices
          - configurations
          - revisions
          - routes
          - services
