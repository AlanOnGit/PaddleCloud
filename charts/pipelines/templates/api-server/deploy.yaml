apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app: ml-pipeline
    application-crd-id: kubeflow-pipelines
  name: {{ printf "%s-api-server" (include "common.names.fullname" .) }}
  namespace: {{- include "common.names.namespace" . | quote }}
spec:
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app: ml-pipeline
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      labels: {{- include "common.labels.matchLabels" . | nindent 8 }}
        app: ml-pipeline
        application-crd-id: kubeflow-pipelines
    spec:
      containers:
        - env:
            - name: AUTO_UPDATE_PIPELINE_DEFAULT_VERSION
              valueFrom:
                configMapKeyRef:
                  key: autoUpdatePipelineDefaultVersion
                  name: pipeline-install-config
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OBJECTSTORECONFIG_SECURE
              value: "false"
            - name: OBJECTSTORECONFIG_BUCKETNAME
              valueFrom:
                configMapKeyRef:
                  key: bucketName
                  name: pipeline-install-config
            - name: DBCONFIG_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql-secret
            - name: DBCONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql-secret
            - name: DBCONFIG_DBNAME
              valueFrom:
                configMapKeyRef:
                  key: pipelineDb
                  name: pipeline-install-config
            - name: DBCONFIG_HOST
              valueFrom:
                configMapKeyRef:
                  key: dbHost
                  name: pipeline-install-config
            - name: DBCONFIG_PORT
              valueFrom:
                configMapKeyRef:
                  key: dbPort
                  name: pipeline-install-config
            - name: DBCONFIG_CONMAXLIFETIMESEC
              valueFrom:
                configMapKeyRef:
                  key: ConMaxLifeTimeSec
                  name: pipeline-install-config
            - name: OBJECTSTORECONFIG_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  key: accesskey
                  name: mlpipeline-minio-artifact
            - name: OBJECTSTORECONFIG_SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  key: secretkey
                  name: mlpipeline-minio-artifact
          image: {{ include "common.images.image" (dict "imageRoot" .Values.api-server.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.api-server.image.pullPolicy | quote }}
          livenessProbe:
            exec:
              command:
                - wget
                - -q
                - -S
                - -O
                - '-'
                - http://localhost:8888/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          name: ml-pipeline-api-server
          ports:
            - containerPort: 8888
              name: http
            - containerPort: 8887
              name: grpc
          readinessProbe:
            exec:
              command:
                - wget
                - -q
                - -S
                - -O
                - '-'
                - http://localhost:8888/apis/v1beta1/healthz
            initialDelaySeconds: 3
            periodSeconds: 5
            timeoutSeconds: 2
          resources:
            requests:
              cpu: 250m
              memory: 500Mi
      serviceAccountName: ml-pipeline
