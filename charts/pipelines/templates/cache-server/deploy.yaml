apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app: cache-server
    application-crd-id: kubeflow-pipelines
  name: {{ printf "%s-cache-server" (include "common.names.fullname" .) }}
  namespace: {{- include "common.names.namespace" . | quote }}
spec:
  replicas: 1
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app: cache-server
      application-crd-id: kubeflow-pipelines
  template:
    metadata:
      labels: {{- include "common.labels.matchLabels" . | nindent 8 }}
        app: cache-server
        application-crd-id: kubeflow-pipelines
    spec:
      containers:
        - args:
            - --db_driver=$(DBCONFIG_DRIVER)
            - --db_host=$(DBCONFIG_HOST_NAME)
            - --db_port=$(DBCONFIG_PORT)
            - --db_name=$(DBCONFIG_DB_NAME)
            - --db_user=$(DBCONFIG_USER)
            - --db_password=$(DBCONFIG_PASSWORD)
            - --namespace_to_watch=$(NAMESPACE_TO_WATCH)
          env:
            - name: CACHE_IMAGE
              valueFrom:
                configMapKeyRef:
                  key: cacheImage
                  name: pipeline-install-config
            - name: CACHE_NODE_RESTRICTIONS
              valueFrom:
                configMapKeyRef:
                  key: cacheNodeRestrictions
                  name: pipeline-install-config
            - name: DBCONFIG_DRIVER
              value: mysql
            - name: DBCONFIG_DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: cacheDb
                  name: pipeline-install-config
            - name: DBCONFIG_HOST_NAME
              valueFrom:
                configMapKeyRef:
                  key: dbHost
                  name: pipeline-install-config
            - name: DBCONFIG_PORT
              valueFrom:
                configMapKeyRef:
                  key: dbPort
                  name: pipeline-install-config
            - name: DBCONFIG_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: mysql-secret
            - name: DBCONFIG_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: mysql-secret
            - name: NAMESPACE_TO_WATCH
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: {{ include "common.images.image" (dict "imageRoot" .Values.cache-server.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.cache-server.image.pullPolicy | quote }}
          name: server
          ports:
            - containerPort: 8443
              name: webhook-api
          volumeMounts:
            - mountPath: /etc/webhook/certs
              name: webhook-tls-certs
              readOnly: true
      serviceAccountName: kubeflow-pipelines-cache
      volumes:
        - name: webhook-tls-certs
          secret:
            secretName: webhook-server-tls
