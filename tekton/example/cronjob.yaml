apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-cronjob
spec:
  schedule: "*/10 * * * *"       # It will run every 10 min.
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          serviceAccount: tekton-pipelinerun-cleaner
          containers:
          - name: kubectl
            image: docker.io/alpine/k8s:1.21.5
            imagePullPolicy: IfNotPresent
            env:
              # The Maximum number of pipelinerun basing the same pipeline to keep.
              - name: NUM_TO_KEEP
                value: "3"
            command:
              - /bin/bash
              - -c
              - >
                while read -r PIPELINE; do
                  while read -r PIPELINE_TO_REMOVE; do
                    test -n "${PIPELINE_TO_REMOVE}" || continue;
                    kubectl delete ${PIPELINE_TO_REMOVE} \
                        && echo "$(date -Is) PipelineRun ${PIPELINE_TO_REMOVE} deleted." \
                        || echo "$(date -Is) Unable to delete PipelineRun ${PIPELINE_TO_REMOVE}.";
                  done < <(kubectl get pipelinerun -l tekton.dev/pipeline=${PIPELINE} --sort-by=.metadata.creationTimestamp -o name | head -n -${NUM_TO_KEEP});
                done < <(kubectl get pipelinerun -o go-template='{{range .items}}{{index .metadata.labels "tekton.dev/pipeline"}}{{"\n"}}{{end}}' | uniq);

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: curl-cronjob
spec:
  schedule: "*/0 0 * * 0"       # Cron Time
  jobTemplate:
    spec:
      template:
        spec:
          # Never / Always / OnFailure, found in https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/
          restartPolicy: Never
          containers:
          - name: curl-container
            image: curlimages/curl
            env:
            # The image registry to be pushed
            - name: IMAGE_REGISTRY
              value: paddlecloud/paddleocr
            # The name of paddle toolkit.
            # PaddleOCR / PaddleNLP / PaddleDetection / PaddleSpeech / PaddleClas / PaddleRec / PaddleSeg
            - name: TOOLKIT_NAME
              value: PaddleOCR
            # The branch to ues
            - name: TOOLKIT_REVISION
              value: release/2.4
            # The tag of paddlepaddle image used in Dockerfile.
            # Found in https://hub.docker.com/r/paddlepaddle/paddle/tags
            - name: TOOLKIT_BASE_IMAGE_TAG
              value: 2.2.2
            # The github repo containing Dockerfile.
            - name: DOCKER_REPO_URL
              value: https://github.com/freeliuzc/PaddleCloud.git
            # The branch of this repo to use
            - name: DOCKER_REVISION
              value: dev-tekton
            # Dockerfile's relative path in the repo.
            - name: DOCKERFILE_PATH
              value: tekton/dockerfiles/Dockerfile
            imagePullPolicy: IfNotPresent
            # Send a post request to Tekton EventListener.
            # You should check the namespace and service port last line if it not works.
            args: ["curl", "-X", "POST", "--data",
                   '{"image-registry": "$(IMAGE_REGISTRY)",
                   "toolkit-repo-name": "$(TOOLKIT_NAME)",
                   "toolkit-revision": "$(TOOLKIT_REVISION)",
                   "toolkit-base-image-tag": "$(TOOLKIT_BASE_IMAGE_TAG)",
                   "docker-repo-url": "$(DOCKER_REPO_URL)",
                   "docker-revision": "$(DOCKER_REVISION)",
                   "dockerfile-path": "$(DOCKERFILE_PATH)"}',
                   "el-cron-listener.default.svc.cluster.local:8080"]
